# Generated by Django 4.2 on 2023-04-24 08:04

from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DocumentModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Регламент", "regulation"),
                            ("Приказ о присвоении", "rang_report"),
                        ],
                        max_length=100,
                        verbose_name="Тип документа",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Название документа"),
                ),
                (
                    "document",
                    models.FileField(
                        upload_to=main.models.get_document_path, verbose_name="Документ"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Имя игрока")),
                (
                    "rang",
                    models.CharField(default="", max_length=10, verbose_name="Звание"),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("Мужчина", "man"), ("Женищина", "woman")],
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResultsModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tournament_name",
                    models.CharField(max_length=100, verbose_name="Название турнира"),
                ),
                ("date", models.DateField(verbose_name="Дата проведения")),
                (
                    "results",
                    models.FileField(
                        upload_to=main.models.get_result_path, verbose_name="PDF"
                    ),
                ),
                (
                    "short_form",
                    models.CharField(
                        max_length=100, verbose_name="Короткая форма названия"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("1 регламент ПМ", "FirstPm"),
                            ("2 регламент ПМ", "SecondPm"),
                            ("Пары", "Pairs"),
                            ("Пары микс", "PairsMix"),
                            ("Тройки", "Triples"),
                        ],
                        max_length=100,
                        verbose_name="Тип турнира",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="YearModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(verbose_name="Год")),
            ],
            options={"ordering": ["-year"],},
        ),
        migrations.CreateModel(
            name="StatisticModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("min", models.SmallIntegerField(verbose_name="Минимальная игра")),
                ("max", models.SmallIntegerField(verbose_name="Максимальная игра")),
                (
                    "avg",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Средний"
                    ),
                ),
                ("more_200", models.SmallIntegerField(verbose_name="Игр за 200")),
                ("games", models.SmallIntegerField(verbose_name="Количество игр")),
                ("sum", models.IntegerField(verbose_name="Общая сумма")),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.playermodel",
                        verbose_name="Игрок",
                    ),
                ),
                (
                    "year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.yearmodel",
                        verbose_name="Год",
                    ),
                ),
            ],
            options={"ordering": ["-sum"],},
        ),
        migrations.CreateModel(
            name="SecondPmModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sum", models.IntegerField(verbose_name="Сумма")),
                (
                    "avg",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Средний"
                    ),
                ),
                ("place", models.SmallIntegerField(verbose_name="Место")),
                ("game_1", models.SmallIntegerField(verbose_name="Игра 1")),
                ("game_2", models.SmallIntegerField(verbose_name="Игра 2")),
                ("game_3", models.SmallIntegerField(verbose_name="Игра 3")),
                ("game_4", models.SmallIntegerField(verbose_name="Игра 4")),
                ("game_5", models.SmallIntegerField(verbose_name="Игра 5")),
                ("game_6", models.SmallIntegerField(verbose_name="Игра 6")),
                ("game_7", models.SmallIntegerField(verbose_name="Игра 7")),
                ("game_8", models.SmallIntegerField(verbose_name="Игра 8")),
                ("game_9", models.SmallIntegerField(verbose_name="Игра 9")),
                ("game_10", models.SmallIntegerField(verbose_name="Игра 10")),
                ("game_11", models.SmallIntegerField(verbose_name="Игра 11")),
                ("game_12", models.SmallIntegerField(verbose_name="Игра 12")),
                ("game_13", models.SmallIntegerField(verbose_name="Игра 13")),
                ("game_14", models.SmallIntegerField(verbose_name="Игра 14")),
                ("game_15", models.SmallIntegerField(verbose_name="Игра 15")),
                ("game_16", models.SmallIntegerField(verbose_name="Игра 16")),
                ("game_17", models.SmallIntegerField(verbose_name="Игра 17")),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.playermodel",
                        verbose_name="Игрок",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.resultsmodel",
                        verbose_name="Турнир",
                    ),
                ),
                (
                    "year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.yearmodel",
                        verbose_name="Год",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.AddField(
            model_name="resultsmodel",
            name="year",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="main.yearmodel"
            ),
        ),
        migrations.CreateModel(
            name="RatingModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.SmallIntegerField(verbose_name="Очки рейтинга")),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.playermodel",
                        verbose_name="Игрок",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.resultsmodel",
                        verbose_name="Турнир",
                    ),
                ),
                (
                    "year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.yearmodel",
                        verbose_name="Год",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NewsModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="Навзание новости"),
                ),
                (
                    "short_description",
                    models.CharField(max_length=100, verbose_name="Короткое описание"),
                ),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "news_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=main.models.get_image_path,
                        verbose_name="Изображение новости",
                    ),
                ),
                ("date", models.DateField(verbose_name="Дата")),
                ("count", models.IntegerField(verbose_name="Просмотров")),
                (
                    "regulation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.documentmodel",
                        verbose_name="Регламент",
                    ),
                ),
                (
                    "result",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.resultsmodel",
                        verbose_name="Результаты",
                    ),
                ),
            ],
            options={"ordering": ["-date"],},
        ),
        migrations.CreateModel(
            name="NewsDocuments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Название документа"),
                ),
                (
                    "document",
                    models.FileField(
                        upload_to=main.models.get_document_path, verbose_name="Документ"
                    ),
                ),
                (
                    "news",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.newsmodel",
                        verbose_name="Новость",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ImagesModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=100, verbose_name="Название изображения"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to=main.models.get_image_path, verbose_name="Изображение"
                    ),
                ),
                (
                    "news",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.newsmodel",
                        verbose_name="Новость",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FirstPmModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sum", models.IntegerField(verbose_name="Сумма")),
                (
                    "avg",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Средний"
                    ),
                ),
                ("place", models.SmallIntegerField(verbose_name="Место")),
                ("game_1", models.SmallIntegerField(verbose_name="Игра 1")),
                ("game_2", models.SmallIntegerField(verbose_name="Игра 2")),
                ("game_3", models.SmallIntegerField(verbose_name="Игра 3")),
                ("game_4", models.SmallIntegerField(verbose_name="Игра 4")),
                ("game_5", models.SmallIntegerField(verbose_name="Игра 5")),
                ("game_6", models.SmallIntegerField(verbose_name="Игра 6")),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.playermodel",
                        verbose_name="Игрок",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.resultsmodel",
                        verbose_name="Турнир",
                    ),
                ),
                (
                    "year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.yearmodel",
                        verbose_name="Год",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.AddField(
            model_name="documentmodel",
            name="year",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="main.yearmodel",
                verbose_name="Год",
            ),
        ),
        migrations.CreateModel(
            name="CalendarModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tournament",
                    models.CharField(max_length=100, verbose_name="Название турнира"),
                ),
                ("start_date", models.DateField(verbose_name="Дата начала")),
                ("end_date", models.DateField(verbose_name="Дата окончания")),
                ("city", models.CharField(max_length=100, verbose_name="Город")),
                (
                    "regulation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main.documentmodel",
                        verbose_name="Регламент",
                    ),
                ),
            ],
            options={"ordering": ["-start_date"],},
        ),
    ]
